generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Subjects {
  Maths
  History
  Literature
  English
  Science
  Compsci
}

enum Role {
  Admin
  Teacher
  Student
}

enum Level {
  Elementary
  Secondary
  High
  University
}

model Assignment {
  id          Int                 @id @default(autoincrement())
  subject     String
  name        String
  description String
  ageGroup    String
  teacher     Teacher             @relation(fields: [teacherId], references: [id])
  teacherId   Int
  students    StudentAssignment[]

  StudentAssignmentFile StudentAssignmentFile[]
}

model Admin {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  role     Role   @default(Admin)
}

model User {
  id         Int    @id @default(autoincrement())
  firstName  String
  lastName   String
  password   String
  email      String @unique
  role       Role   @default(Student)
  sTeacherId Int?

  teacher Teacher?
  student Student?
}

model Teacher {
  id              Int          @id @default(autoincrement())
  user            User         @relation(fields: [id], references: [id], onDelete: Cascade)
  subject         Subjects
  hourlyRate      Int
  rating          Float
  numberOfRatings Int
  Assignment      Assignment[]
}

model Student {
  id                 Int                 @id @default(autoincrement())
  user               User                @relation(fields: [id], references: [id], onDelete: Cascade)
  ageGroup           Level
  studentAssignments StudentAssignment[]

  StudentAssignmentFile StudentAssignmentFile[]
}

model StudentAssignment {
  student      Student    @relation(fields: [studentId], references: [id])
  studentId    Int
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
  assignmentId Int
  completed    Boolean    @default(false)
  mark         Int        @default(0)

  @@id([studentId, assignmentId])
}

model StudentAssignmentFile {
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
  assignmentId Int
  student      Student    @relation(fields: [studentId], references: [id])
  studentId    Int
  fileName     String
  fileType     String
  fileData     Bytes
  uploadedAt   DateTime   @default(now())

  @@id([studentId, assignmentId])
}
